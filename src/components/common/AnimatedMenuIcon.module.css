/* components/AnimatedMenuIcon.module.css */

.iconSvg {
    overflow: visible;
    cursor: pointer;
}

/* --- Стили для статичного крестика --- */
.staticCross {
    opacity: 1;
    transition: opacity 0.3s ease-in-out;
}
.staticCross line {
    stroke: currentColor;
    stroke-width: 2;
    stroke-linecap: round;
}


/* --- Стили для линий гамбургера --- */
.burgerLines line {
    stroke: currentColor;
    stroke-width: 2;
    stroke-linecap: round;
    opacity: 0;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
    opacity 0.3s ease-in-out;
    transform-origin: center center;
}
.burgerLine1 { transform: translateY(4px); }
.burgerLine2 { transform: scaleX(0.8); }
.burgerLine3 { transform: translateY(-4px); }


/* --- Circling Text (No CSS Rotation Animation Needed) --- */
.circlingText {
    font-family: "Open Sans", Helvetica, sans-serif;
    font-size: 6.5px; /* Adjust size if needed to prevent visual overlap */
    font-weight: 700;
    fill: currentColor;
    text-transform: uppercase;
    letter-spacing: 1.5px; /* Adjust spacing if needed */
    opacity: 1;
    transition: opacity 0.3s ease-in-out;
    /* transform-origin: center center; NO LONGER NEEDED FOR ROTATION */
    /* animation: rotateText 10s linear infinite; REMOVED */
}

/* REMOVED CSS Keyframes */
/* @keyframes rotateText {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
} */


/* --- Hover State --- */

/* 1. Hide cross */
:global(.mobileNavToggle button:hover) .staticCross {
    opacity: 0;
}

/* 2. Show burger lines */
:global(.mobileNavToggle button:hover) .burgerLines line {
    opacity: 1;
}
:global(.mobileNavToggle button:hover) .burgerLine1 { transform: translateY(0); }
:global(.mobileNavToggle button:hover) .burgerLine2 { transform: scaleX(1); }
:global(.mobileNavToggle button:hover) .burgerLine3 { transform: translateY(0); }

/* 3. Hide text on hover (instead of pausing non-existent CSS animation) */
:global(.mobileNavToggle button:hover) .circlingText {
    opacity: 0;
    /* animation-play-state: paused; REMOVED */
}